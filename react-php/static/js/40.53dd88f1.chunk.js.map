{"version":3,"sources":["views/home.js","services/PostData.js"],"names":["MainPage","state","username","password","redirectToReferrer","login","bind","onChange","type","userData","this","Promise","resolve","reject","fetch","BaseURL","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","error","result","responseJson","sessionStorage","setItem","setState","alert","e","target","name","value","to","getItem","className","md-auto","md","placeholder","autoComplete","xs","color","onClick","Component"],"mappings":"0PAmBMA,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVC,oBAAoB,GAEtB,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBARJ,E,yCAUd,WAAS,IC9BcE,EAAMC,ED8BrB,OACFC,KAAKT,MAAMC,UAAYQ,KAAKT,MAAME,UC/BjBK,EDgCV,QChCgBC,EDgCPC,KAAKT,MC7BpB,IAAIU,SAAQ,SAACC,EAASC,GAC3BC,MAAMC,sEAAmBP,EAAM,CAC7BQ,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUZ,KAEpBa,MAAK,SAACC,GAAD,OACJA,EAASC,OAAOF,MAAK,SAACG,GACpBb,EAAQa,SAGXC,OAAM,SAACC,GACNd,EAAOc,UDcqBL,MAAK,SAACM,GAClC,IAAIC,EAAeD,EACfC,EAAapB,UACfqB,eAAeC,QAAQ,WAAYX,KAAKC,UAAUQ,IAClD,EAAKG,SAAS,CAAE5B,oBAAoB,KAC/B6B,MAAML,EAAOD,UAEjBM,MAAM,uC,sBAEf,SAASC,GACPxB,KAAKsB,SAAL,eAAiBE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,oBAE5C,WACE,OAAI3B,KAAKT,MAAMG,mBACN,cAAC,IAAD,CAAUkC,GAAI,UAEnBR,eAAeS,QAAQ,YAClB,cAAC,IAAD,CAAUD,GAAI,yBAGrB,qBAAKE,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,eAAC,KAAD,CAAMA,UAAU,yBAAhB,UACE,eAAC,IAAD,CAAMC,WAAA,EAAQD,UAAU,oBAAxB,UACE,gGAGA,oBAAIA,UAAU,OAAd,uCAEF,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,uCACA,mBAAGA,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOJ,KAAK,iBAGhB,cAAC,IAAD,CACE5B,KAAK,OACL4B,KAAK,WACLO,YAAY,WACZC,aAAa,WACbrC,SAAUG,KAAKH,cAGnB,eAAC,IAAD,CAAaiC,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOJ,KAAK,wBAGhB,cAAC,IAAD,CACE5B,KAAK,WACL4B,KAAK,WACLO,YAAY,WACZpC,SAAUG,KAAKH,SACfqC,aAAa,wBAGjB,cAAC,KAAD,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,MAAM,UACNN,UAAU,OACVO,QAASrC,KAAKL,MAHhB,6C,GA/EH2C,aAmGRhD","file":"static/js/40.53dd88f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { PostData } from \"../services/PostData\";\r\n\r\nclass MainPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      redirectToReferrer: false,\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  login() {\r\n    if (this.state.username && this.state.password) {\r\n      PostData(\"login\", this.state).then((result) => {\r\n        let responseJson = result;\r\n        if (responseJson.userData) {\r\n          sessionStorage.setItem(\"userData\", JSON.stringify(responseJson));\r\n          this.setState({ redirectToReferrer: true });\r\n        } else alert(result.error);\r\n      });\r\n    } else alert(\"Please fill Username or Password!\");\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    if (this.state.redirectToReferrer) {\r\n      return <Redirect to={\"/home\"} />;\r\n    }\r\n    if (sessionStorage.getItem(\"userData\")) {\r\n      return <Redirect to={\"/dashboard/Dashboard\"} />;\r\n    }\r\n    return (\r\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n        <CContainer>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md-auto className=\"py-5 align-middle\">\r\n              <h2>\r\n                WSN-Based Water Quality Monitoring Application for Shrimp Pond\r\n              </h2>\r\n              <h5 className=\"py-4\">2016730040 - Frederick</h5>\r\n            </CCol>\r\n            <CCol md=\"8\">\r\n              <CCardGroup>\r\n                <CCard className=\"p-4\">\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-muted\">Sign In to your account</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-user\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          placeholder=\"Username\"\r\n                          autoComplete=\"username\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          onChange={this.onChange}\r\n                          autoComplete=\"current-password\"\r\n                        />\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs=\"6\">\r\n                          <CButton\r\n                            color=\"primary\"\r\n                            className=\"px-4\"\r\n                            onClick={this.login}\r\n                          >\r\n                            Login\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainPage;\r\n","export function PostData(type, userData) {\r\n  let BaseURL =\r\n    \"http://localhost/skrispi/IoT_shrimpPond/react-php/api/index.php\";\r\n  return new Promise((resolve, reject) => {\r\n    fetch(BaseURL + \"?tp=\" + type, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) =>\r\n        response.json().then((res) => {\r\n          resolve(res);\r\n        })\r\n      )\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"],"sourceRoot":""}