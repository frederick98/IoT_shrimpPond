{"version":3,"sources":["reusable/DocsLink.js","views/users/UsersData.js","views/base/tables/Tables.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","usersData","id","registered","role","status","getBadge","fields","Tables","xs","lg","items","itemsPerPage","pagination","scopedSlots","item","color","striped","size","bordered","hover","dark"],"mappings":"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","file":"static/js/19.33787f84.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","const usersData = [\n  {\n    id: 0,\n    name: \"John Doe\",\n    registered: \"2018/01/01\",\n    role: \"Guest\",\n    status: \"Pending\",\n  },\n  {\n    id: 1,\n    name: \"Samppa Nori\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    name: \"Estavan Lykos\",\n    registered: \"2018/02/01\",\n    role: \"Staff\",\n    status: \"Banned\",\n  },\n  {\n    id: 3,\n    name: \"Chetan Mohamed\",\n    registered: \"2018/02/01\",\n    role: \"Admin\",\n    status: \"Inactive\",\n  },\n  {\n    id: 4,\n    name: \"Derick Maximinus\",\n    registered: \"2018/03/01\",\n    role: \"Member\",\n    status: \"Pending\",\n  },\n  {\n    id: 5,\n    name: \"Friderik Dávid\",\n    registered: \"2018/01/21\",\n    role: \"Staff\",\n    status: \"Active\",\n  },\n  {\n    id: 6,\n    name: \"Yiorgos Avraamu\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Active\",\n  },\n  {\n    id: 7,\n    name: \"Avram Tarasios\",\n    registered: \"2018/02/01\",\n    role: \"Staff\",\n    status: \"Banned\",\n  },\n  {\n    id: 8,\n    name: \"Quintin Ed\",\n    registered: \"2018/02/01\",\n    role: \"Admin\",\n    status: \"Inactive\",\n  },\n  {\n    id: 9,\n    name: \"Enéas Kwadwo\",\n    registered: \"2018/03/01\",\n    role: \"Member\",\n    status: \"Pending\",\n  },\n  {\n    id: 10,\n    name: \"Agapetus Tadeáš\",\n    registered: \"2018/01/21\",\n    role: \"Staff\",\n    status: \"Active\",\n  },\n  {\n    id: 11,\n    name: \"Carwyn Fachtna\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Active\",\n  },\n  {\n    id: 12,\n    name: \"Nehemiah Tatius\",\n    registered: \"2018/02/01\",\n    role: \"Staff\",\n    status: \"Banned\",\n  },\n  {\n    id: 13,\n    name: \"Ebbe Gemariah\",\n    registered: \"2018/02/01\",\n    role: \"Admin\",\n    status: \"Inactive\",\n  },\n  {\n    id: 14,\n    name: \"Eustorgios Amulius\",\n    registered: \"2018/03/01\",\n    role: \"Member\",\n    status: \"Pending\",\n  },\n  {\n    id: 15,\n    name: \"Leopold Gáspár\",\n    registered: \"2018/01/21\",\n    role: \"Staff\",\n    status: \"Active\",\n  },\n  {\n    id: 16,\n    name: \"Pompeius René\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Active\",\n  },\n  {\n    id: 17,\n    name: \"Paĉjo Jadon\",\n    registered: \"2018/02/01\",\n    role: \"Staff\",\n    status: \"Banned\",\n  },\n  {\n    id: 18,\n    name: \"Micheal Mercurius\",\n    registered: \"2018/02/01\",\n    role: \"Admin\",\n    status: \"Inactive\",\n  },\n  {\n    id: 19,\n    name: \"Ganesha Dubhghall\",\n    registered: \"2018/03/01\",\n    role: \"Member\",\n    status: \"Pending\",\n  },\n  {\n    id: 20,\n    name: \"Hiroto Šimun\",\n    registered: \"2018/01/21\",\n    role: \"Staff\",\n    status: \"Active\",\n  },\n  {\n    id: 21,\n    name: \"Vishnu Serghei\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Active\",\n  },\n  {\n    id: 22,\n    name: \"Zbyněk Phoibos\",\n    registered: \"2018/02/01\",\n    role: \"Staff\",\n    status: \"Banned\",\n  },\n  {\n    id: 23,\n    name: \"Aulus Agmundr\",\n    registered: \"2018/01/01\",\n    role: \"Member\",\n    status: \"Pending\",\n  },\n  {\n    id: 42,\n    name: \"Ford Prefect\",\n    registered: \"2001/05/25\",\n    role: \"Alien\",\n    status: \"Don't panic!\",\n  },\n];\n\nexport default usersData;\n","import React from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n} from \"@coreui/react\";\nimport { DocsLink } from \"src/reusable\";\n\nimport usersData from \"../../users/UsersData\";\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"Active\":\n      return \"success\";\n    case \"Inactive\":\n      return \"secondary\";\n    case \"Pending\":\n      return \"warning\";\n    case \"Banned\":\n      return \"danger\";\n    default:\n      return \"primary\";\n  }\n};\nconst fields = [\"name\", \"registered\", \"role\", \"status\"];\n\nconst Tables = () => {\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>\n              Simple Table\n              <DocsLink name=\"CModal\" />\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>Striped Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                striped\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>Condensed Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                size=\"sm\"\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader>Bordered Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                bordered\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Combined All Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                hover\n                striped\n                bordered\n                size=\"sm\"\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Combined All dark Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                dark\n                hover\n                striped\n                bordered\n                size=\"sm\"\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Tables;\n"],"sourceRoot":""}