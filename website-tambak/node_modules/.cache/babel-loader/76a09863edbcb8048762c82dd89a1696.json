{"ast":null,"code":"import _slicedToArray from \"D:/Downloads/new/new1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Downloads\\\\new\\\\new1\\\\src\\\\views\\\\users\\\\Users.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CPagination } from '@coreui/react';\nimport usersData from './UsersData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar Users = function Users() {\n  _s();\n\n  var history = useHistory();\n  var queryPage = useLocation().search.match(/page=([0-9]+)/, '');\n  var currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n\n  var _useState = useState(currentPage),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var pageChange = function pageChange(newPage) {\n    currentPage !== newPage && history.push(\"/users?page=\".concat(newPage));\n  };\n\n  useEffect(function () {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: /*#__PURE__*/_jsxDEV(CCol, {\n      xl: 6,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [\"Users\", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \" example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CDataTable, {\n            items: usersData,\n            fields: [{\n              key: 'name',\n              _classes: 'font-weight-bold'\n            }, 'registered', 'role', 'status'],\n            hover: true,\n            striped: true,\n            itemsPerPage: 5,\n            activePage: page,\n            clickableRows: true,\n            onRowClick: function onRowClick(item) {\n              return history.push(\"/users/\".concat(item.id));\n            },\n            scopedSlots: {\n              'status': function status(item) {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(CBadge, {\n                    color: getBadge(item.status),\n                    children: item.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, _this);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(CPagination, {\n            activePage: page,\n            onActivePageChange: pageChange,\n            pages: 5,\n            doubleArrows: false,\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Users, \"0yR2AYwMP3YyQyngiwe6vFZubv0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/Downloads/new/new1/src/views/users/Users.js"],"names":["React","useState","useEffect","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CPagination","usersData","getBadge","status","Users","history","queryPage","search","match","currentPage","Number","page","setPage","pageChange","newPage","push","key","_classes","item","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination\n} from '@coreui/react'\n\nimport usersData from './UsersData'\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\n\nconst Users = () => {\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\n  }\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage)\n  }, [currentPage, page])\n\n  return (\n    <CRow>\n      <CCol xl={6}>\n        <CCard>\n          <CCardHeader>\n            Users\n            <small className=\"text-muted\"> example</small>\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={usersData}\n            fields={[\n              { key: 'name', _classes: 'font-weight-bold' },\n              'registered', 'role', 'status'\n            ]}\n            hover\n            striped\n            itemsPerPage={5}\n            activePage={page}\n            clickableRows\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\n            scopedSlots = {{\n              'status':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.status)}>\n                      {item.status}\n                    </CBadge>\n                  </td>\n                )\n            }}\n          />\n          <CPagination\n            activePage={page}\n            onActivePageChange={pageChange}\n            pages={5}\n            doubleArrows={false} \n            align=\"center\"\n          />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}